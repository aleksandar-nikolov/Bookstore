@page "/books/delete/{id}"

@attribute [Authorize]
@inject IFileUpload _fileUpload
@inject IBookRepository _repo
@inject NavigationManager _navMan

<h3>Delete book</h3>

@if (!int.TryParse(Id, out int id) || id < 1)
{
    <ErrorMessage Message="Unacceptable book id"></ErrorMessage>
}
else if (Model == null)
{
    <LoadingMessage Message="Loading book details" />
}
else
{
    <div class="col-6">
        @if (_isFailed)
        {
            <ErrorMessage Message="Problem deleting the book" />
        }
        <h4>Book Details</h4>
        <table class="table table-responsive">
            <tr>
                <td>
                    <string>Title</string>
                </td>
                <td>@Model.Title</td>
            </tr>
            <tr>
                <td>
                    <string>Author</string>
                </td>
                <td>
                    @if (Model.Author == null)
                    {
                        <span class="text-muted">No author recorded</span>
                    }
                    else
                    {
                        <a href="/authors/view/@Model.AuthorId">@Model.Author.Firstname @Model.Author.Lastname</a>
                    }
                </td>
            </tr>
            <tr>
                <td>
                    <string>Summary</string>
                </td>
                <td>@Model.Summary</td>
            </tr>
            <tr>
                <td>
                    <string>Year</string>
                </td>
                <td>@Model.Year</td>
            </tr>
            <tr>
                <td>
                    <string>ISBN</string>
                </td>
                <td>@Model.Isbn</td>
            </tr>
        </table>
    </div>
    <div class="col-4">
        <img src="uploads/@Model.Image" style="width: 300px;height: 300px" />
        <h3 class="text-center text-info">@Model.Price</h3>
    </div>
}
<br />
<a href="/books/" class="btn btn-secondary">
    <span class="oi oi-media-skip-backward">Back to list</span>
</a>
<button class="btn btn-secondary btn-danger" @onclick="DeleteAuthor">
    <span class="oi oi-pencil">Delete</span>
</button>


@code {

    [Parameter]
    public string Id { get; set; }

    private Book Model = new Book();

    private bool _isFailed = false;

    protected override async Task OnInitializedAsync()
    {
        int id = Convert.ToInt32(Id);
        Model = await _repo.Get(Endpoints.BooksEndpoint, id);
    }

    private async Task DeleteAuthor()
    {

        bool isSuccess = await _repo.Delete(Endpoints.BooksEndpoint, Model.Id);
        if (!isSuccess)
        {
            _isFailed = true;
        }
        else
        {
            _fileUpload.RemoveFile(Model.Image);
            _navMan.NavigateTo("/books/");
        }
    }
}