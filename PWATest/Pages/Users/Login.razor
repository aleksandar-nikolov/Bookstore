@page "/login"

@inject IAuthenticationRepository _authRepo
@inject NavigationManager _navMan

<div class="card">
    <h3 class="card-title">Login</h3>
    @if (!_response)
    {
        <div class="alert alert-danger">
            <p>Something went wrong</p>
        </div>
    }
    <div class="card-body">
        <EditForm Model="_loginModel" OnValidSubmit="HandleLogin">
            <DataAnnotationsValidator></DataAnnotationsValidator>
            <ValidationSummary></ValidationSummary>
            <div class="form-group">
                <label for="email">Email address</label>
                <InputText id="email" class="form-control" @bind-Value="_loginModel.EmailAddress" />
                <ValidationMessage For="@(() => _loginModel.EmailAddress)" />
            </div>
            <div class="form-group">
                <label for="password">Password</label>
                <InputText id="password" type="password" class="form-control" @bind-Value="_loginModel.Password" />
                <ValidationMessage For="@(() => _loginModel.Password)" />
            </div>
            <button type="submit" class="btn btn-primary">Login</button>
        </EditForm>
    </div>
</div>

@code {
    private readonly LoginModel _loginModel = new LoginModel();
    private bool _response = true;

    private async Task HandleLogin()
    {
        _response = await _authRepo.Login(_loginModel);
        if (_response)
        {
            _navMan.NavigateTo("/");
        }
    }
}